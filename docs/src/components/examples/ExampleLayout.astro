---
import StarlightPage from '@astrojs/starlight/components/StarlightPage.astro';

const {pathname}= Astro.url
const { currentLocale } = Astro;
const baseUrl = currentLocale==='en'?'/example':`/${currentLocale}/example`
const verticalBaseUrl = `${baseUrl}/vertical-list`
const horizontalBaseUrl =  `${baseUrl}/horizontal-list`

interface Props {
   title: string;
}
const getItem = (label:string,href:string)=>{
  return { label, href,  isCurrent: href===pathname }
}
const getLabel = (label:string, spanishLabel:string)=>{
  if (currentLocale==='es') {
    return spanishLabel
  }
  return label
}
const verticalItems=[
   {
    link:`${verticalBaseUrl}/single-vertical-list/`,
    label: getLabel('basic','básico')
  },
  {
    link:`${verticalBaseUrl}/single-vertical-list-autoscroll/`,
    label: getLabel('list on a scroller','lista en un scroller')
  },
  {
    link: `${verticalBaseUrl}/single-vertical-list-component-with-handler/`,
    label: getLabel('list with handler','lista con un handler')
  },
  {
    link: `${verticalBaseUrl}/single-vertical-list-component-with-is-draggable/`,
    label: getLabel('IsDraggable','IsDraggable')
  },
  {
    link: `${verticalBaseUrl}/group-vertical-lists/`,
    label: getLabel('group of lists','grupo de listas')
  }
]

const horizontalItems=[
  {
    link:`${horizontalBaseUrl}/single-horizontal-list/`,
    label: getLabel('basic','básico')
  },
  {
    link: `${horizontalBaseUrl}/single-horizontal-list-autoscroll/`,
    label: getLabel('list on a scroller','lista en un scroller')
  },
   {
    link: `${horizontalBaseUrl}/group-horizontal-lists/`,
    label: getLabel('group of lists','grupo de listas')
  },
]
const description = getLabel('Sorting a list of pokemons with vue-fluid-dnd','Ordenar una lista de pokemones con vue-fluid-dnd') 

---

<StarlightPage
  lang={currentLocale},
  sidebar={[
      { label: 'Vue Fluid DnD', href: '/' },
      {
        label: getLabel('Single vertical list','Simple lista vertical'),
        items: verticalItems.map(({link, label})=>getItem(label,link)),
      },
      {
        label: getLabel('Single horizontal list','Simple lista horizontal'),
        items: horizontalItems.map(({link, label})=>getItem(label,link)),
      },
    ]} 
  frontmatter={{ ...Astro.props, description ,tableOfContents:false }}  >
  <slot/>
</StarlightPage>
