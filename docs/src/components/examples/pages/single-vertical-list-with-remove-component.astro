---
import SingleVerticalListOfPokemonsVue from "@/components/examples/vue/SingleVerticalListOfPokemonsWithRemove.vue";
import SingleVerticalListOfPokemonsSvelte from "@/components/examples/svelte/SingleVerticalListOfPokemonsWithRemove.svelte";
import { SingleVerticalListOfPokemonsWithRemove as SingleVeSingleVerticalListOfPokemonsWithRemoveReact } from "@/components/examples/react/SingleVerticalListOfPokemonsWithRemove";
import PageComponent from "./shared/page-component.astro";
import { getI18N } from "@/i18n";

const { currentLocale } = Astro;
const { framework } = Astro.props;
const i18n = getI18N({ currentLocale });
const verticalList=`
<script setup lang="ts">
import { ref } from "vue";
import { useDragAndDrop } from "fluid-dnd/vue";
import type { Pokemon } from "./Pokemon";
import PokemonComponent from "./PokemonComponent.vue";
import { fetchPokemons } from "@/server/pokemonServer";

const pokemons = ref([] as Pokemon[]);
pokemons.value = await fetchPokemons(9);
const [ parent,_, removeEvent ] = useDragAndDrop(pokemons, {
  draggingClass: "dragging-pokemon",
  delayBeforeRemove: 300,
});
</script>
<template>
  <div class="flex max-sm:justify-center items-start">
    <div
      ref="parent"
      class="bg-gray-200/60 border-solid border-black/40 rounded-2xl w-60 border-4 p-4 block"
    >
      <PokemonComponent
        v-for="(pokemon, index) in pokemons"
        :key="pokemon.name"
        :index="index"
        :pokemon="pokemon"
        has-remove
        :removeEvent
      />
    </div>
  </div>
</template>
`
const verticalListSvelteCode = `
<script lang="ts">
import { useDragAndDrop } from "fluid-dnd/svelte";
import type { Pokemon } from "../Pokemon";
import PokemonComponent from "@/components/examples/svelte/PokemonComponent.svelte";
import { fetchPokemons } from "@/server/pokemonServer";

const pokemons = $state([] as Pokemon[]);
fetchPokemons(9).then((newPokemons)=>{
  pokemons.push(...newPokemons);
});
const [ parent,_, removeEvent ] = useDragAndDrop(pokemons, {
  removingClass: "removed",
  delayBeforeRemove: 300,
});
</script>
<div class="flex max-sm:justify-center items-start">
  <div
    use:parent
    class="bg-gray-200/60 border-solid border-black/40 rounded-2xl w-60 border-4 p-4 block"
  >
    {#each pokemons as pokemon, index (pokemon.name)}
      <PokemonComponent
        index={index}
        pokemon={pokemon}
        has-remove
        removeEvent={removeEvent}
      />
    {/each}
  </div>
</div>
`
const reactCode = `
import { useDragAndDrop } from "fluid-dnd/react";
import type { Pokemon } from "../Pokemon";
import { fetchPokemons } from "@/server/pokemonServer";
import { PokemonComponent } from "./PokemonComponent";
import { useEffect } from "react";

export const SingleVerticalListOfPokemonsWithRemove: React.FC = () => {
  const [ parent, listOfPokemons, setPokemons,_, removeEvent ] = useDragAndDrop<Pokemon, HTMLDivElement>([], {
    removingClass: "removed",
    delayBeforeRemove: 300,
  });
  useEffect(() => { 
      const fetchPokemonse = async () => {
          const newPokemons = await fetchPokemons(9);
          setPokemons(newPokemons);
      }
      fetchPokemonse();
  }, [])

  return (
    <div className="flex max-sm:justify-center items-start">
      <div
        ref={parent}
        className="bg-gray-200/60 border-solid border-black/40 rounded-2xl w-60 border-4 p-4 block"
      >
        {
          listOfPokemons.map((pokemon, index) => (
            <PokemonComponent
              key={pokemon.name}
              index={index}
              pokemon={pokemon}
              hasRemove
              removeEvent={removeEvent}
            />
          ))
        }
      </div>
    </div>
  )
}

`
const fileName = 'SingleVerticalListOfPokemons';
---
<PageComponent title={i18n.SINGLE_VERTICAL_LIST_WITH_REMOVE} framework={framework} vueCode={verticalList} svelteCode={verticalListSvelteCode} reactCode={reactCode} fileName={fileName}>
  <fragment slot="vue">
    <SingleVerticalListOfPokemonsVue client:load />
  </fragment>
  <fragment slot="svelte">
    <SingleVerticalListOfPokemonsSvelte client:load />
  </fragment>
  <fragment slot="react">
    <SingleVeSingleVerticalListOfPokemonsWithRemoveReact client:load/>
  </fragment>
</PageComponent>
<style>
 select {
    background-color: auto !important;
  }

</style>